FROM docker.io/node:20-alpine3.20 AS base


RUN apk update
RUN npm install -g turbo

WORKDIR /app

FROM base AS builder

COPY . .

RUN turbo prune @repo/db @repo/web @repo/server --docker
FROM base AS installer

COPY --from=builder /app/out/json .
COPY --from=builder /app/out/package-lock.json ./package-lock.json

RUN npm install


COPY --from=builder /app/out/full .

RUN NODE_ENV=production turbo run build --filter=@repo/db

ARG DATABASE_PROVIDER

RUN DATABASE_PROVIDER=$DATABASE_PROVIDER npm run generate:run -w apps/db

ARG BACKEND_HOST
ARG BACKEND_PORT

RUN NODE_ENV=production BACKEND_HOST=$BACKEND_HOST BACKEND_PORT=$BACKEND_PORT turbo run build --filter=@repo/web

RUN NODE_ENV=production turbo run build --filter=@repo/server

FROM base AS runner

RUN addgroup --system --gid 1001 server
RUN adduser --system --uid 1001 server

RUN chown -R server:server /app

USER server

COPY --from=installer --chown=server:server /app/node_modules/ ./node_modules/
COPY --from=installer --chown=server:server /app/apps/db /app/apps/db
COPY --from=installer --chown=server:server /app/apps/server/dist/index.js .
COPY --from=installer --chown=server:server /app/apps/web/dist ./public

ARG DATABASE_PROVIDER
ENV DATABASE_PROVIDER=$DATABASE_PROVIDER

ARG BACKEND_HOST
ENV BACKEND_HOST=$BACKEND_HOST

ARG BACKEND_PORT
ENV BACKEND_PORT=$BACKEND_PORT

EXPOSE $BACKEND_PORT

CMD ["node", "index.js"]
