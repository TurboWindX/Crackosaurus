FROM docker.io/node:20-alpine AS base

RUN apk update
RUN npm install -g turbo

WORKDIR /app

FROM base AS config

WORKDIR /config

COPY . .

RUN turbo prune @repo/config --docker

WORKDIR /app

RUN mv /config/out/json/* .
RUN mv /config/out/package-lock.json .

RUN npm install

RUN rm -rf apps packages
RUN mv /config/out/full/* .

RUN mv /config/packages/container/config.json .

RUN rm -rf /config

RUN npm run config:cli -w apps/config -- docker

FROM base AS builder

COPY . .

RUN turbo prune @repo/db @repo/web @repo/server --docker

FROM base AS installer

COPY --from=builder /app/out/json .
COPY --from=builder /app/out/package-lock.json ./package-lock.json

RUN npm install

COPY --from=builder /app/out/full .
COPY --from=config /app/apps/db/.config.json /app/apps/db/.config.json
COPY --from=config /app/apps/web/.config.json /app/apps/web/.config.json
COPY --from=config /app/apps/server/.config.json /app/apps/server/.config.json

RUN npm run migrate -w apps/db
RUN turbo run build --filter=server --filter=web

FROM base AS runner

RUN addgroup --system --gid 1001 server
RUN adduser --system --uid 1001 server

RUN chown -R server:server /app

USER server

COPY --from=installer --chown=server:server /app/node_modules/ ./node_modules/

COPY --from=installer --chown=server:server /app/apps/db /app/apps/db

COPY --from=installer --chown=server:server /app/apps/server/dist/index.js .
COPY --from=installer --chown=server:server /app/apps/web/dist ./public

CMD ["node", "index.js"]
